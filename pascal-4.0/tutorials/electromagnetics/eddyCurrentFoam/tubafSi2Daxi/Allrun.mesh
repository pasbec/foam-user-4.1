#!/bin/bash

# Remove old polyMesh
rm -rf '0/polyMesh'
rm -rf 'constant/polyMesh'

# Create blockMeshDict
./setup/blockMeshDict.py || exit 1

# Run blockMesh to get 2D mesh
blockMesh || exit 1

# Run snappyHexMesh to do refinement
snappyHexMesh -overwrite || exit 1

# Remove leftovers from snappyHexMesh
rm -rf 'constant/cellLevel' \
        'constant/polyMesh/cellLevel'* \
        'constant/pointLevel' \
        'constant/polyMesh/pointLevel'* \
        'constant/polyMesh/refinementHistory'* \
        'constant/polyMesh/surfaceIndex'* \
        'constant/polyMesh/level0Edge' \
        > /dev/null 2>&1

# Remove empty patches
createPatch -overwrite || exit 1

# Create a 2D mesh again
extrudeMesh || exit 1

cp 'system/changeDictionaryDict.extrudeMesh' 'system/changeDictionaryDict'
changeDictionary || exit 1

# Convert 2D mesh into wedge
makeWedgeMesh || exit 1

# Move new polyMesh files to storage folder
mesh0Folder='0/polyMesh'
meshFolder='constant/polyMesh'
[[ ! -e "$meshFolder" ]] && mkdir "$meshFolder"
if [[ -e "$mesh0Folder" ]]; then

    mv "$mesh0Folder/boundary" \
       "$mesh0Folder/faces" \
       "$mesh0Folder/neighbour" \
       "$mesh0Folder/owner" \
       "$mesh0Folder/points" \
       "$meshFolder/" \
        > /dev/null 2>&1

fi

meshBakFolder='constant/polyMesh.org'
[[ ! -e "$meshBakFolder" ]] && mkdir "$meshBakFolder"
mv "$meshFolder/boundary" \
   "$meshFolder/faces" \
   "$meshFolder/neighbour" \
   "$meshFolder/owner" \
   "$meshFolder/points" \
   "$meshBakFolder/" \
    > /dev/null 2>&1

# Remove polyMesh
rm -rf "$meshFolder"
rm -rf "$mesh0Folder"
if [[ -e '0' ]]; then
    [[ -z "$(ls -A '0' > /dev/null 2>&1)" ]] && rmdir '0'
fi
