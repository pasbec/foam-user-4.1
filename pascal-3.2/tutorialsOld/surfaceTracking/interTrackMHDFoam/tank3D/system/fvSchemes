/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default none;
    ddt(U) backward;
    ddt(k) backward;
    ddt(epsilon) backward;
    ddt(omega) backward;
    ddt(nuTilda) backward;
}

gradSchemes
{
    default Gauss linear;
}

divSchemes
{
    default none;
    div(FL) Gauss linear;
    div(phi,U) Gauss GammaVDC 0.5;
    div((nuEff*dev(grad(U).T()))) Gauss linear;
    div(phi,k) Gauss upwind phi;
    div(phi,epsilon) Gauss upwind phi;
    div(phi,omega) Gauss upwind phi;
    div(phi,nuTilda) Gauss upwind phi;
}

laplacianSchemes
{
    default none;
    laplacian(pB) Gauss linear corrected;
    laplacian(p) Gauss linear corrected;
    laplacian(rAU,p) Gauss linear corrected;
    laplacian(rAUf,p) Gauss linear corrected;
    laplacian(nuEff,U) Gauss linear corrected;
    laplacian(DkEff,k) Gauss linear corrected;
    laplacian(DepsilonEff,epsilon) Gauss linear corrected;
    laplacian(DomegaEff,omega) Gauss linear corrected;
    laplacian(DnuTildaEff,nuTilda) Gauss linear corrected;
}

interpolationSchemes
{
    default linear;
}

snGradSchemes
{
    default corrected;
}

fluxRequired
{
    p;
}

// ************************************************************************* //
