/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default                           none;
}

gradSchemes
{
    default                           none;

    grad((rMu0|sigma))                Gauss linear;

    grad(SRe)                         Gauss linear;
    grad(SIm)                         Gauss linear;
    snGradCorr(SRe)                   Gauss linear;
    snGradCorr(SIm)                   Gauss linear;

    curl(TRe)                         Gauss linear;
    curl(TIm)                         Gauss linear;
    grad((gammaf*div(TRe)))           Gauss linear;
    grad((gammaf*div(TIm)))           Gauss linear;
    snGradCorr(TRe)                   Gauss linear;
    snGradCorr(TIm)                   Gauss linear;

    curl(jsRe)                        Gauss linear;
    curl(jsIm)                        Gauss linear;
    snGradCorr(TsRe)                  Gauss linear;
    snGradCorr(TsIm)                  Gauss linear;

    grad(GRe)                         Gauss linear;
    grad(GIm)                         Gauss linear;
    snGradCorr(GRe)                   Gauss linear;
    snGradCorr(GIm)                   Gauss linear;
}

divSchemes
{
    default                           none;

    div(TRe)                          Gauss linear;
    div(TIm)                          Gauss linear;

    div(TsRe)                         Gauss linear;
    div(TsIm)                         Gauss linear;
}

laplacianSchemes
{
    default                           none;

    laplacian(SRe)                    Gauss linear corrected; // linear is not used here
    laplacian(SIm)                    Gauss linear corrected; // linear is not used here

    laplacian(TRe)                    Gauss linear corrected; // linear is not used here
    laplacian(TIm)                    Gauss linear corrected; // linear is not used here

    laplacian(TsRe)                   Gauss linear corrected; // linear is not used here
    laplacian(TsIm)                   Gauss linear corrected; // linear is not used here

    laplacian(GRe)                    Gauss linear corrected; // linear is not used here
    laplacian(GIm)                    Gauss linear corrected; // linear is not used here
}

interpolationSchemes
{
    default                           none;

    interpolate(sigma)                linear;
}

// ************************************************************************* //
