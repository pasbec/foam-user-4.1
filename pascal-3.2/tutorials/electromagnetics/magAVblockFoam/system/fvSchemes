/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default                           none;
}

gradSchemes
{
    default                           none;
    curl(ARe)                         Gauss linear;
    curl(AIm)                         Gauss linear;
    
    snGradCorr(ARe)                   Gauss linear;
    snGradCorr(AIm)                   Gauss linear;
    
    grad(VReSource)                   Gauss linear;    
    grad(VImSource)                   Gauss linear;
    
    grad(VRe)                         Gauss linear;
    grad(VIm)                         Gauss linear;

    snGradCorr(VRe)                   Gauss linear;
    snGradCorr(VIm)                   Gauss linear;
}

divSchemes
{
    default                           none;
    
    div(ARe)                          Gauss linear;
    div(AIm)                          Gauss linear;
    
    div(jRe)                          Gauss linear;
    div(jIm)                          Gauss linear;
}

laplacianSchemes
{
    default                           none;
    laplacian(ARe)                    Gauss linear corrected;
    laplacian(AIm)                    Gauss linear corrected;
    
    laplacian(rAReAf,VRe)             Gauss linear corrected;
    laplacian(rAImAf,VIm)             Gauss linear corrected;
    
    laplacian(sigmaf,VRe)             Gauss linear corrected;
    laplacian(sigmaf,VIm)             Gauss linear corrected;
}

interpolationSchemes
{
    default                           none;
    
    interpolate(sigma)                harmonic;    
    interpolate(alpha)                linear;
    
    interpolate((1|A(ARe)))           linear;
    interpolate((1|A(AIm)))           linear;

    interpolate(grad(VRe))            linear;
    interpolate(grad(VIm))            linear;
}

snGradSchemes
{
    default                           none;
}

// ************************************************************************* //
