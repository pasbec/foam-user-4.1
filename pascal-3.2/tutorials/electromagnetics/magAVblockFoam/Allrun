#!/bin/bash

flagClean=0; flagPrepare=0; flagParallel=0; flagParallel2=0; flagReset=0; flagRun=0

flagRenumberMesh=0

while [[ $# -gt 0 ]]; do
    if   [[ $1 == 'clean' ]];   then flagClean=1
    elif [[ $1 == 'prepare' ]]; then flagPrepare=1
    elif [[ $1 == 'parallel' ]]; then
        flagParallel=1
        flagParallel2=0
    elif [[ $1 == 'parallel2' ]]; then
        flagParallel2=1
        flagParallel=0
    elif [[ $1 == 'reset' ]];   then flagReset=1
    elif [[ $1 == 'start' ]];   then
        flagPrepare=1
        flagRun=1
    else
      echo "Unsupported flag: '$1'"
    fi
    shift
done

# Helper functions
. $WM_PROJECT_USER_DIR/etc/helpFunctions.sh
. $WM_PROJECT_USER_DIR/etc/cleanFunctions.sh

setErrorTrap

if [[ $flagClean -eq 1 ]]; then

    # Cleanup
    cleanCase

    # Wipe folders with org backup
    wipeOrgCopy

    # Wipe polymesh for regions
    wipePolyMesh

    # Clean tools
    cleanTools

fi

if [[ $flagPrepare -eq 1 && $flagClean -eq 1 ]] || \
   [[ $flagPrepare -eq 1 && ! -e '0' ]] || \
   [[ $flagPrepare -eq 1 && ! -e 'constant/polyMesh' ]]; then

    # Restore polymesh from org backup
    restorePolyMeshOrg

    if [[ $flagParallel2 -eq 1 ]]; then

        # Decompose mesh
        runApplication \
            decomposePar || exit 1

        # Store number of processors
        np=$(ls -1d 'processor'* | wc -l)

        # Create new topoSets
        runParallel $np \
            setSet -noVTK -batch 'system/setSetBatch' || exit 1

        # Add fields to 0 from org backup
        addZeroOrgParallel

        runParallel $np \
            funkySetFields -time '0' || exit 1

        # Touch paraFoam files
        paraviewTouchOpenFOAMParallel

    else

        # Create new topoSets
        runApplication \
            setSet -noVTK -batch 'system/setSetBatch' || exit 1

        # Add fields to 0 from org backup
        addZeroOrg

        runApplication \
            funkySetFields -time '0' || exit 1

        # Touch paraFoam files
        paraviewTouchOpenFOAM

    fi

    if [[ $flagParallel -eq 1 ]]; then

        # Decompose mesh
        runApplication \
            decomposePar || exit 1

        # Touch paraFoam files
        paraviewTouchOpenFOAMParallel
    fi
fi

if [[ $flagReset -eq 1 ]]; then

    if [[ $flagParallel -eq 1 ]] || \
       [[ $flagParallel2 -eq 1 ]]; then

        # Clean time directories
        cleanTimeDirectoriesParallel

    else

        # Clean time directories
        cleanTimeDirectories

    fi

    # Remove solver log
    rm "log.$(getApplication)" > /dev/null 2>&1

fi

if [[ $flagRun -eq 1 ]]; then
    if [[ $flagParallel -eq 1 ]] || \
       [[ $flagParallel2 -eq 1 ]]; then

        np=$(ls -1d processor* | wc -l)
        runParallel $np \
            $(getApplication) || exit 1

    else

        runApplication \
            $(getApplication) || exit 1

    fi
fi
